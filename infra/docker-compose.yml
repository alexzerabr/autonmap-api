services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: autonmap-frontend
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./frontend:/app
    command: flask --app app run --host=0.0.0.0 --reload

  api:
    build:
      context: .
      dockerfile: infra/Dockerfile
    container_name: autonmap-api
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./api:/home/appuser/api
      - ./scripts:/home/appuser/scripts
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  db:
    image: postgres:15-alpine
    container_name: autonmap-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: autonmap-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: infra/Dockerfile
    container_name: autonmap-worker
    command: rq worker --url ${REDIS_URL} scans
    
    cap_add:
      - NET_RAW
      - NET_ADMIN
      
    depends_on:
      - redis
      - api
    volumes:
      - ./api:/home/appuser/api
      - ./scripts:/home/appuser/scripts
    env_file:
      - .env
    
volumes:
  postgres_data: