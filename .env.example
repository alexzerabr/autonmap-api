# ---------------------------------------------------------------------------
# Exemplo de arquivo de ambiente para implantação em produção do autonmap-api
#
# Copie este arquivo para `.env` e substitua os valores de placeholder por
# segredos seguros. Você pode gerar strings aleatórias usando
# `openssl rand -base64 32`.
# Todos os serviços leem a configuração exclusivamente deste arquivo via
# docker-compose.yml. Não versione seu `.env` real.
#
# Para subir a stack:
#   docker compose --env-file .env up -d
#
# ---------------------------------------------------------------------------

# Define se deve habilitar a saída de depuração no backend API. Mantenha como
# false em produção.
DEBUG=false

# Chave secreta usada pelo FastAPI para assinar JWTs e outros segredos
API_SECRET_KEY=REPLACE_ME_WITH_A_RANDOM_STRING

# Segredo usado para assinar payloads de webhook ao acionar integrações externas
WEBHOOK_HMAC_SECRET=REPLACE_ME_WITH_ANOTHER_RANDOM_STRING

# Chave secreta usada pelo frontend Flask para gerenciamento de sessão. Se
# você omitir esta variável, o app gerará um valor fraco por padrão; sempre defina.
SECRET_KEY=REPLACE_ME_WITH_A_RANDOM_STRING

# ---------------------------------------------------------------------------
# Configuração do banco de dados
# ---------------------------------------------------------------------------
DB_USER=autonmap
DB_PASSWORD=change_me
DB_NAME=autonmap_db
DB_HOST=db
DATABASE_URL=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}

# ---------------------------------------------------------------------------
# Configuração do Redis
# ---------------------------------------------------------------------------
REDIS_URL=redis://redis:6379/0

# ---------------------------------------------------------------------------
# Configuração de segurança
#
# Uma lista separada por vírgulas de IPs/faixas CIDR permitidos a acessar a API.
# ---------------------------------------------------------------------------
GLOBAL_IP_ALLOWLIST=127.0.0.1,::1

# ---------------------------------------------------------------------------
# Configuração do frontend
#
# FASTAPI_URL é a URL interna que o frontend Flask usa para se comunicar
# com a API backend. Não altere host/porta a menos que modifique o arquivo compose.
# API_ADMIN_TOKEN deve conter um token emitido via o script create_admin_token.
# Veja README_docker.md para instruções.
# ---------------------------------------------------------------------------
FASTAPI_URL=http://backend:8000
API_ADMIN_TOKEN=PASTE_YOUR_ADMIN_TOKEN_HERE

# ---------------------------------------------------------------------------
# Configuração do Nginx
#
# A porta na qual o nginx irá escutar no host. Altere se a porta 80
# conflitar com outros serviços na sua máquina.
# ---------------------------------------------------------------------------
APP_PORT=80
